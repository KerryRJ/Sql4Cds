trigger: none
pr:
  - master
    
pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x86'
  buildConfiguration: 'Release'

steps:
- checkout: self
  persistCredentials: true

- task: NuGetCommand@2
  displayName: Install GitVersion
  inputs:
    command: custom
    arguments: install GitVersion.CommandLine -Version 4.0.0 -OutputDirectory $(Build.BinariesDirectory)/tools -ExcludeVersion

- script: $(Build.BinariesDirectory)/tools/GitVersion.CommandLine/tools/GitVersion.exe /output buildserver /nofetch /updateassemblyinfo
  displayName: Determine Version

- task: PowerShell@2
  displayName: Update version in the vsix manifest
  inputs:
    filePath: 'MarkMpn.Sql4Cds.SSMS\update-version.ps1'
    arguments: '$(GitVersion.AssemblySemVer)'
    pwsh: true
  
- task: NodeTool@0
  displayName: Install Node.js
  inputs:
    versionSpec: '18.x'

- script: |
    call npm --no-git-tag-version version $(GitVersion.SemVer)
    call npm i -g vsce
    yarn install
    gulp build
  displayName: Build ADS extension
  workingDirectory: '$(Build.SourcesDirectory)\AzureDataStudioExtension'

- task: NuGetCommand@2
  displayName: NuGet Restore
  inputs:
    command: restore
    restoreSolution: '**/*.sln'

- task: DotNetCoreCLI@2
  displayName: dotnet restore
  inputs:
    command: restore
    projects: '**/*.csproj'
    feedsToUse: 'select'
    includeNuGetOrg: true

- task: VSBuild@1
  displayName: Build
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:DeployExtension=false'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    testAssemblyVer2: |
      **/MarkMpn.*.Tests.dll
      !**\obj\**
